name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # e.g., v0.2.0
  workflow_dispatch:

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Linux manylinux2014 x86_64
          - os: ubuntu-latest
            platform: manylinux
            arch: x86_64

          # macOS Intel
          - os: macos-13
            platform: macos
            arch: x86_64

          # macOS Apple Silicon
          - os: macos-14
            platform: macos
            arch: aarch64

          # Windows x86_64
          # - os: windows-latest
          #   platform: windows
          #   arch: x86_64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build wheels with maturin
        uses: PyO3/maturin-action@v1
        with:
          command: build
          args: --release --out dist -i python3.8 python3.9 python3.10 python3.11 python3.12
          target: ${{ matrix.arch }}
          manylinux: auto

      - name: Upload built wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Flatten wheels
        run: |
          mkdir all
          for wheel in dist/*/*.whl; do
            if [ -s "$wheel" ]; then
              echo "✅ Found wheel: $wheel"
              cp "$wheel" all/
            else
              echo "⚠️ Skipping empty or invalid wheel: $wheel"
            fi
          done

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: all
